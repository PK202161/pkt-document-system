version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pkt-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: pkt_document_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pkt-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pkt-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/pkt_document_db
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3004
    ports:
      - "3004:3004"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pkt-network
    volumes:
      - ./backend/uploads:/app/uploads
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma db seed &&
        npm start
      "

  # Frontend Web App with Nginx Proxy
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pkt-frontend
    restart: unless-stopped
    ports:
      - "3002:80"
    depends_on:
      - backend
    networks:
      - pkt-network
    environment:
      # ใช้ relative path แทน localhost
      REACT_APP_API_URL: /api

# Volumes
volumes:
  postgres_data:
    driver: local

# Networks
networks:
  pkt-network:
    driver: bridge
